Steps to setup Webpack onto existing project:

1) Install Node.js if not already installed, or update node and npm if already
   installed.
2) Install create-react-app if not already installed (hereafter called CRA).  In
   command prompt (cmd), enter:

   npm install -g create-react-app

3) In command prompt, navigate to folder to contain project folder.  Run
   CRA with command:

   create-react-app app-name

4) To install SASS loader, must 'eject' the project.  In cmd:

   npm run eject

5) To install SASS module, in cmd:

   npm install --save-dev sass-loader node-sass

6) In the config folder, open webpack.config.dev.js and find the
   module.rules[1].oneOf[3].exclude array and add:

   /\.sass$/

   Before file and postcss loaders, add the following entry (dont
   forget comma):

   {
      test: /\.sass$/,
      include: paths.appSrc,
      loaders: ['style-loader', 'css-loader', 'sass-loader']
   },

7) Rename src/index.css to index.sass and convert to sass.  In src/index.js
   replace the line:

   import './index.css';

   with

   import './index.sass';

   Can now test dev by running

   npm run start

8) open webpack.config.prod.js.  In the exclude array for the file loader add:

   /\.sass$/

   At the top of the file, after the other const vars, add:

   const extractSass = new ExtractTextPlugin({
       filename: "[name].[contenthash].css",
       disable: process.env.NODE_ENV === "development"
   });

   In modules.rules, in the oneOf array, after the babel loader element, add:

   {
     test: /\.sass$/,
     use: extractSass.extract({
         use: [{
             loader: "css-loader"
         }, {
             loader: "sass-loader"
         }],
         // use style-loader in development
         fallback: "style-loader"
     })
   },

   In the plugins array, after the modules section, append the following to the
   end of the array:

   extractSass

   Test by running:

   npm run build

9) By default, the paths used in the files generated by CRA builds use absolute
   paths (paths starting with C: for images/css/js files).  To change this, open
   package.json and add the line:

   "homepage": "<path>"

   So I can right-click on the index.html in the build directory and open with
   Chrome, I use:

   "homepage": '.'

10) A service workers is added by CRA to the project for caching.  To remove
    this, comment out the following lines in index.js:

    import registerServiceWorker from './registerServiceWorker';

    registerServiceWorker();

